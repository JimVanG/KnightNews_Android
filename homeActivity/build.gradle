apply plugin: 'com.android.application'

/* Variables */
ext {
    currentUser = System.getenv("USER")
    userHome = System.getProperty("user.home")
    keystorePath = '/Documents/KnightNewsReleases/knight_news_keystore.keystore'
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.1'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 23
        versionName '3.1.2'
    }

    signingConfigs {
        release {
            storeFile file(userHome + keystorePath)
            storePassword ""
            keyAlias "knightnews"
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".d"
            versionNameSuffix "-debug"
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
//            minifyEnabled false
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // This is important, it will run lint checks but won't abort build
    lintOptions {
        abortOnError false
        disable 'InvalidPackage', 'OldTargetApi'
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:cardview-v7:21.0.2'
    compile 'com.android.support:recyclerview-v7:21.0.2'
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'com.mcxiaoke.volley:library:1.0.9'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.github.nirhart:parallaxscroll:1.0'
}

/*
    Building for release must occur from the command line, use this task "./gradlew assembleRelease".
    But a regular debug build is fine running from just Android Studio, use the "run" button.
 */
gradle.taskGraph.whenReady { taskGraph ->
    // Only execute when we are trying to assemble a release build
    if (taskGraph.hasTask(':homeActivity:assembleRelease')) {
        //get the storePassword from the console
        def keyStorePass = System.console().readPassword("\nPlease enter storePassword: ")
        // readPassword returns a char[] so we need to wrap it into a string
        keyStorePass = new String(keyStorePass)

        //get the keyPassword from the console
        def keyPass = System.console().readPassword("\nPlease enter keyPassword: ")
        keyPass = new String(keyPass)

        //set the storePassword and the keyPassword
        android.signingConfigs.release.storePassword = keyStorePass
        android.signingConfigs.release.keyPassword = keyPass
    }
}

